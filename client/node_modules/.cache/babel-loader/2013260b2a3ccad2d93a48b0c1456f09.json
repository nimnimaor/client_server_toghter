{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ReCaptchaInstance_1 = require(\"./ReCaptchaInstance\");\n\nvar ELoadingState;\n\n(function (ELoadingState) {\n  ELoadingState[ELoadingState[\"NOT_LOADED\"] = 0] = \"NOT_LOADED\";\n  ELoadingState[ELoadingState[\"LOADING\"] = 1] = \"LOADING\";\n  ELoadingState[ELoadingState[\"LOADED\"] = 2] = \"LOADED\";\n})(ELoadingState || (ELoadingState = {}));\n\nvar ReCaptchaLoader = function () {\n  function ReCaptchaLoader() {}\n\n  ReCaptchaLoader.load = function (siteKey, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === 'undefined') {\n      return Promise.reject(new Error('This is a library for the browser!'));\n    }\n\n    if (ReCaptchaLoader.getLoadingState() === ELoadingState.LOADED) {\n      if (ReCaptchaLoader.instance.getSiteKey() === siteKey) {\n        return Promise.resolve(ReCaptchaLoader.instance);\n      } else {\n        return Promise.reject(new Error('reCAPTCHA already loaded with different site key!'));\n      }\n    }\n\n    if (ReCaptchaLoader.getLoadingState() === ELoadingState.LOADING) {\n      if (siteKey !== ReCaptchaLoader.instanceSiteKey) {\n        return Promise.reject(new Error('reCAPTCHA already loaded with different site key!'));\n      }\n\n      return new Promise(function (resolve, reject) {\n        ReCaptchaLoader.successfulLoadingConsumers.push(function (instance) {\n          return resolve(instance);\n        });\n        ReCaptchaLoader.errorLoadingRunnable.push(function (reason) {\n          return reject(reason);\n        });\n      });\n    }\n\n    ReCaptchaLoader.instanceSiteKey = siteKey;\n    ReCaptchaLoader.setLoadingState(ELoadingState.LOADING);\n    var loader = new ReCaptchaLoader();\n    return new Promise(function (resolve, reject) {\n      loader.loadScript(siteKey, options.useRecaptchaNet || false, options.renderParameters ? options.renderParameters : {}, options.customUrl).then(function () {\n        ReCaptchaLoader.setLoadingState(ELoadingState.LOADED);\n        var widgetID = loader.doExplicitRender(grecaptcha, siteKey, options.explicitRenderParameters ? options.explicitRenderParameters : {});\n        var instance = new ReCaptchaInstance_1.ReCaptchaInstance(siteKey, widgetID, grecaptcha);\n        ReCaptchaLoader.successfulLoadingConsumers.forEach(function (v) {\n          return v(instance);\n        });\n        ReCaptchaLoader.successfulLoadingConsumers = [];\n\n        if (options.autoHideBadge) {\n          instance.hideBadge();\n        }\n\n        ReCaptchaLoader.instance = instance;\n        resolve(instance);\n      }).catch(function (error) {\n        ReCaptchaLoader.errorLoadingRunnable.forEach(function (v) {\n          return v(error);\n        });\n        ReCaptchaLoader.errorLoadingRunnable = [];\n        reject(error);\n      });\n    });\n  };\n\n  ReCaptchaLoader.getInstance = function () {\n    return ReCaptchaLoader.instance;\n  };\n\n  ReCaptchaLoader.setLoadingState = function (state) {\n    ReCaptchaLoader.loadingState = state;\n  };\n\n  ReCaptchaLoader.getLoadingState = function () {\n    if (ReCaptchaLoader.loadingState === null) {\n      return ELoadingState.NOT_LOADED;\n    } else {\n      return ReCaptchaLoader.loadingState;\n    }\n  };\n\n  ReCaptchaLoader.prototype.loadScript = function (siteKey, useRecaptchaNet, renderParameters, customUrl) {\n    var _this = this;\n\n    if (useRecaptchaNet === void 0) {\n      useRecaptchaNet = false;\n    }\n\n    if (renderParameters === void 0) {\n      renderParameters = {};\n    }\n\n    if (customUrl === void 0) {\n      customUrl = '';\n    }\n\n    var scriptElement = document.createElement('script');\n    scriptElement.setAttribute('recaptcha-v3-script', '');\n    var scriptBase = 'https://www.google.com/recaptcha/api.js';\n\n    if (useRecaptchaNet) {\n      scriptBase = 'https://recaptcha.net/recaptcha/api.js';\n    }\n\n    if (customUrl) {\n      scriptBase = customUrl;\n    }\n\n    if (renderParameters.render) {\n      renderParameters.render = undefined;\n    }\n\n    var parametersQuery = this.buildQueryString(renderParameters);\n    scriptElement.src = scriptBase + '?render=explicit' + parametersQuery;\n    return new Promise(function (resolve, reject) {\n      scriptElement.addEventListener('load', _this.waitForScriptToLoad(function () {\n        resolve(scriptElement);\n      }), false);\n\n      scriptElement.onerror = function (error) {\n        ReCaptchaLoader.setLoadingState(ELoadingState.NOT_LOADED);\n        reject(error);\n      };\n\n      document.head.appendChild(scriptElement);\n    });\n  };\n\n  ReCaptchaLoader.prototype.buildQueryString = function (parameters) {\n    var parameterKeys = Object.keys(parameters);\n\n    if (parameterKeys.length < 1) {\n      return '';\n    }\n\n    return '&' + Object.keys(parameters).filter(function (parameterKey) {\n      return !!parameters[parameterKey];\n    }).map(function (parameterKey) {\n      return parameterKey + '=' + parameters[parameterKey];\n    }).join('&');\n  };\n\n  ReCaptchaLoader.prototype.waitForScriptToLoad = function (callback) {\n    var _this = this;\n\n    return function () {\n      if (window.grecaptcha === undefined) {\n        setTimeout(function () {\n          _this.waitForScriptToLoad(callback);\n        }, ReCaptchaLoader.SCRIPT_LOAD_DELAY);\n      } else {\n        window.grecaptcha.ready(function () {\n          callback();\n        });\n      }\n    };\n  };\n\n  ReCaptchaLoader.prototype.doExplicitRender = function (grecaptcha, siteKey, parameters) {\n    var augmentedParameters = {\n      sitekey: siteKey,\n      badge: parameters.badge,\n      size: parameters.size,\n      tabindex: parameters.tabindex\n    };\n\n    if (parameters.container) {\n      return grecaptcha.render(parameters.container, augmentedParameters);\n    } else {\n      return grecaptcha.render(augmentedParameters);\n    }\n  };\n\n  ReCaptchaLoader.loadingState = null;\n  ReCaptchaLoader.instance = null;\n  ReCaptchaLoader.instanceSiteKey = null;\n  ReCaptchaLoader.successfulLoadingConsumers = [];\n  ReCaptchaLoader.errorLoadingRunnable = [];\n  ReCaptchaLoader.SCRIPT_LOAD_DELAY = 25;\n  return ReCaptchaLoader;\n}();\n\nexports.load = ReCaptchaLoader.load;\nexports.getInstance = ReCaptchaLoader.getInstance;","map":{"version":3,"sources":["C:/Users/Popi8/OneDrive/שולחן העבודה/שרת לקוח/my-app/node_modules/recaptcha-v3/dist/ReCaptchaLoader.js"],"names":["Object","defineProperty","exports","value","ReCaptchaInstance_1","require","ELoadingState","ReCaptchaLoader","load","siteKey","options","document","Promise","reject","Error","getLoadingState","LOADED","instance","getSiteKey","resolve","LOADING","instanceSiteKey","successfulLoadingConsumers","push","errorLoadingRunnable","reason","setLoadingState","loader","loadScript","useRecaptchaNet","renderParameters","customUrl","then","widgetID","doExplicitRender","grecaptcha","explicitRenderParameters","ReCaptchaInstance","forEach","v","autoHideBadge","hideBadge","catch","error","getInstance","state","loadingState","NOT_LOADED","prototype","_this","scriptElement","createElement","setAttribute","scriptBase","render","undefined","parametersQuery","buildQueryString","src","addEventListener","waitForScriptToLoad","onerror","head","appendChild","parameters","parameterKeys","keys","length","filter","parameterKey","map","join","callback","window","setTimeout","SCRIPT_LOAD_DELAY","ready","augmentedParameters","sitekey","badge","size","tabindex","container"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReCaptchaInstance_1 = require(\"./ReCaptchaInstance\");\nvar ELoadingState;\n(function (ELoadingState) {\n    ELoadingState[ELoadingState[\"NOT_LOADED\"] = 0] = \"NOT_LOADED\";\n    ELoadingState[ELoadingState[\"LOADING\"] = 1] = \"LOADING\";\n    ELoadingState[ELoadingState[\"LOADED\"] = 2] = \"LOADED\";\n})(ELoadingState || (ELoadingState = {}));\nvar ReCaptchaLoader = (function () {\n    function ReCaptchaLoader() {\n    }\n    ReCaptchaLoader.load = function (siteKey, options) {\n        if (options === void 0) { options = {}; }\n        if (typeof document === 'undefined') {\n            return Promise.reject(new Error('This is a library for the browser!'));\n        }\n        if (ReCaptchaLoader.getLoadingState() === ELoadingState.LOADED) {\n            if (ReCaptchaLoader.instance.getSiteKey() === siteKey) {\n                return Promise.resolve(ReCaptchaLoader.instance);\n            }\n            else {\n                return Promise.reject(new Error('reCAPTCHA already loaded with different site key!'));\n            }\n        }\n        if (ReCaptchaLoader.getLoadingState() === ELoadingState.LOADING) {\n            if (siteKey !== ReCaptchaLoader.instanceSiteKey) {\n                return Promise.reject(new Error('reCAPTCHA already loaded with different site key!'));\n            }\n            return new Promise(function (resolve, reject) {\n                ReCaptchaLoader.successfulLoadingConsumers.push(function (instance) { return resolve(instance); });\n                ReCaptchaLoader.errorLoadingRunnable.push(function (reason) { return reject(reason); });\n            });\n        }\n        ReCaptchaLoader.instanceSiteKey = siteKey;\n        ReCaptchaLoader.setLoadingState(ELoadingState.LOADING);\n        var loader = new ReCaptchaLoader();\n        return new Promise(function (resolve, reject) {\n            loader.loadScript(siteKey, options.useRecaptchaNet || false, options.renderParameters ? options.renderParameters : {}, options.customUrl).then(function () {\n                ReCaptchaLoader.setLoadingState(ELoadingState.LOADED);\n                var widgetID = loader.doExplicitRender(grecaptcha, siteKey, options.explicitRenderParameters ? options.explicitRenderParameters : {});\n                var instance = new ReCaptchaInstance_1.ReCaptchaInstance(siteKey, widgetID, grecaptcha);\n                ReCaptchaLoader.successfulLoadingConsumers.forEach(function (v) { return v(instance); });\n                ReCaptchaLoader.successfulLoadingConsumers = [];\n                if (options.autoHideBadge) {\n                    instance.hideBadge();\n                }\n                ReCaptchaLoader.instance = instance;\n                resolve(instance);\n            }).catch(function (error) {\n                ReCaptchaLoader.errorLoadingRunnable.forEach(function (v) { return v(error); });\n                ReCaptchaLoader.errorLoadingRunnable = [];\n                reject(error);\n            });\n        });\n    };\n    ReCaptchaLoader.getInstance = function () {\n        return ReCaptchaLoader.instance;\n    };\n    ReCaptchaLoader.setLoadingState = function (state) {\n        ReCaptchaLoader.loadingState = state;\n    };\n    ReCaptchaLoader.getLoadingState = function () {\n        if (ReCaptchaLoader.loadingState === null) {\n            return ELoadingState.NOT_LOADED;\n        }\n        else {\n            return ReCaptchaLoader.loadingState;\n        }\n    };\n    ReCaptchaLoader.prototype.loadScript = function (siteKey, useRecaptchaNet, renderParameters, customUrl) {\n        var _this = this;\n        if (useRecaptchaNet === void 0) { useRecaptchaNet = false; }\n        if (renderParameters === void 0) { renderParameters = {}; }\n        if (customUrl === void 0) { customUrl = ''; }\n        var scriptElement = document.createElement('script');\n        scriptElement.setAttribute('recaptcha-v3-script', '');\n        var scriptBase = 'https://www.google.com/recaptcha/api.js';\n        if (useRecaptchaNet) {\n            scriptBase = 'https://recaptcha.net/recaptcha/api.js';\n        }\n        if (customUrl) {\n            scriptBase = customUrl;\n        }\n        if (renderParameters.render) {\n            renderParameters.render = undefined;\n        }\n        var parametersQuery = this.buildQueryString(renderParameters);\n        scriptElement.src = scriptBase + '?render=explicit' + parametersQuery;\n        return new Promise(function (resolve, reject) {\n            scriptElement.addEventListener('load', _this.waitForScriptToLoad(function () {\n                resolve(scriptElement);\n            }), false);\n            scriptElement.onerror = function (error) {\n                ReCaptchaLoader.setLoadingState(ELoadingState.NOT_LOADED);\n                reject(error);\n            };\n            document.head.appendChild(scriptElement);\n        });\n    };\n    ReCaptchaLoader.prototype.buildQueryString = function (parameters) {\n        var parameterKeys = Object.keys(parameters);\n        if (parameterKeys.length < 1) {\n            return '';\n        }\n        return '&' + Object.keys(parameters)\n            .filter(function (parameterKey) {\n            return !!parameters[parameterKey];\n        })\n            .map(function (parameterKey) {\n            return parameterKey + '=' + parameters[parameterKey];\n        }).join('&');\n    };\n    ReCaptchaLoader.prototype.waitForScriptToLoad = function (callback) {\n        var _this = this;\n        return function () {\n            if (window.grecaptcha === undefined) {\n                setTimeout(function () {\n                    _this.waitForScriptToLoad(callback);\n                }, ReCaptchaLoader.SCRIPT_LOAD_DELAY);\n            }\n            else {\n                window.grecaptcha.ready(function () {\n                    callback();\n                });\n            }\n        };\n    };\n    ReCaptchaLoader.prototype.doExplicitRender = function (grecaptcha, siteKey, parameters) {\n        var augmentedParameters = {\n            sitekey: siteKey,\n            badge: parameters.badge,\n            size: parameters.size,\n            tabindex: parameters.tabindex\n        };\n        if (parameters.container) {\n            return grecaptcha.render(parameters.container, augmentedParameters);\n        }\n        else {\n            return grecaptcha.render(augmentedParameters);\n        }\n    };\n    ReCaptchaLoader.loadingState = null;\n    ReCaptchaLoader.instance = null;\n    ReCaptchaLoader.instanceSiteKey = null;\n    ReCaptchaLoader.successfulLoadingConsumers = [];\n    ReCaptchaLoader.errorLoadingRunnable = [];\n    ReCaptchaLoader.SCRIPT_LOAD_DELAY = 25;\n    return ReCaptchaLoader;\n}());\nexports.load = ReCaptchaLoader.load;\nexports.getInstance = ReCaptchaLoader.getInstance;\n"]},"metadata":{},"sourceType":"script"}